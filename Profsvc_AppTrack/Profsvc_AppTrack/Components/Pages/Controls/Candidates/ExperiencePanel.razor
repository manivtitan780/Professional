<div class="experienceContainerBox">
	<div>
		<div>
			<SfGrid AllowPaging="false" DataSource="@Model" EnableHeaderFocus="true" EnableHover="true" Height="255px" ID="gridExperience" @ref="GridExperience" RowHeight="@RowHeight"
					SelectedRowIndex="0" TValue="CandidateExperience" Width="99%">
				<GridSelectionSettings EnableToggle="false" Mode="SelectionMode.Row" Type="SelectionType.Single" />
				<GridEvents RowSelected="RowSelected" TValue="CandidateExperience" />
				<GridColumns>
					<GridColumn Field="@nameof(CandidateExperience.Employer)" HeaderText="Degree" Width="20%" />
					<GridColumn Field="@nameof(CandidateExperience.ID)" HeaderText="ID" IsPrimaryKey="true" Visible="false" />
					<GridColumn HeaderText="Duration" Width="20%">
						<Template Context="aCon">
							@{
								if (aCon is CandidateExperience _con)
								{
									<span>@($"{_con.Start} - {(_con.End == "" ? "Present" : _con.End)}")</span>
								}
							}
						</Template>
					</GridColumn>
					<GridColumn Field="@nameof(CandidateExperience.Location)" HeaderText="Location" Width="20%" />
					<GridColumn Field="@nameof(CandidateExperience.Title)" HeaderText="Title" Width="20%" />
					<GridColumn Field="@nameof(CandidateExperience.UpdatedBy)" HeaderText="Updated By" Width="20%" />
					<GridColumn Width="10%">
						<Template Context="bCon">
							@{
								if (bCon is CandidateExperience _con && _con.UpdatedBy == UserName && !IsRequisition && EditRights)
								{
									<SfButton Content="" IconCss="editIconInner" @onclick="() => EditExperienceDialog(_con.ID)" />
									<SfButton Content="" IconCss="deleteIconInner" @onclick="() => DeleteExperienceMethod(_con.ID)" />
								}
							}
						</Template>
					</GridColumn>
				</GridColumns>
			</SfGrid>
		</div>
	</div>
</div>
<ConfirmDialog Delete="() => DeleteExperience.InvokeAsync(_selectedID)" Entity="Experience" Height="160px" @ref="DialogConfirm" Width="385px"></ConfirmDialog>